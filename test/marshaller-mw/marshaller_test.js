// Generated by LiveScript 1.2.0
(function(){
  var requires, assert, expect, _, Person, PersonMarshaller, person;
  requires = require('../../requires');
  requires.test('test_setup');
  assert = require('chai').assert;
  expect = require('chai').expect;
  _ = require('prelude-ls');
  Person = requires.clazz('person');
  PersonMarshaller = requires.marshaller('person_marshaller');
  person = {
    name: 'Joe 6 Pack',
    age: 28,
    status: 'single',
    clazz: 'person'
  };
  describe('Marshaller', function(){
    var someHash, marshallers, mshal;
    mshal = {};
    describe('marshal', function(){
      return context('PersonMarshaller', function(){
        var res;
        before(function(){
          return mshal.person = new PersonMarshaller(person);
        });
        return describe('marshal!', function(){
          return specify('no data to marshal should fail', function(){
            return expect(function(){
              return mshal.person.marshal();
            }).to['throw'];
          });
        });
      });
    });
    describe('marshal', function(){
      return context('PersonMarshaller inits data as person', function(){
        var res;
        before(function(){
          mshal.person = new PersonMarshaller(person);
          return res = mshal.person.marshal();
        });
        return describe('marshal!', function(){
          specify('returns new marhalled object', function(){
            return expect(res).to.not.equal(person);
          });
          specify('has same name', function(){
            return expect(res.name).to.equal(person.name);
          });
          return specify('has removed age', function(){
            return expect(res.age).to.equal(void 8);
          });
        });
      });
    });
    return describe('marshal person', function(){
      return context('PersonMarshaller', function(){
        var res;
        before(function(){
          mshal.person = new PersonMarshaller;
          return res = mshal.person.marshal(person);
        });
        return describe('marshal  person', function(){
          specify('returns new marhalled object', function(){
            return expect(res).to.not.equal(person);
          });
          specify('has same name', function(){
            return expect(res.name).to.equal(person.name);
          });
          return specify('has removed age', function(){
            return expect(res.age).to.equal(void 8);
          });
        });
      });
    });
  });
}).call(this);
