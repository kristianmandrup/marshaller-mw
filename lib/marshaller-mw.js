// Generated by LiveScript 1.2.0
(function(){
  var ContextDecorations, DecoratorMw;
  ContextDecorations = require('context_decorations');
  module.exports = DecoratorMw = (function(superclass){
    var prototype = extend$((import$(DecoratorMw, superclass).displayName = 'DecoratorMw', DecoratorMw), superclass).prototype, constructor = DecoratorMw;
    function DecoratorMw(context){
      this.context = context;
      DecoratorMw.superclass.apply(this, arguments);
      this.decorations = this.context.decorators != null
        ? createDecorations(this.context.decorators)
        : app.decorators;
    }
    prototype.createDecorations = function(context){
      return new ContextDecorations(context);
    };
    prototype.run = function(ctx){
      var klass;
      superclass.prototype.run.apply(this, arguments);
      klass = this.decorations.get(this.context, this.model);
      return new klass(this.data);
    };
    return DecoratorMw;
  }(ModelMw));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
